{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:56:09.220Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:56:09.221Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planets.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-06T23:56:09.221Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:56:09.228Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:56:43.446Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:56:48.516Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planets.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:56:48.519Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-06T23:56:48.524Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:57:57.414Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:57:57.415Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:57:57.415Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:57:57.456Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:57:57.507Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:57:57.508Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"/api/planets","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:58:46.914Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-06T23:58:46.957Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-06T23:58:47.008Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-06T23:58:47.009Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-06T23:58:47.009Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-06T23:58:47.010Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:01:00.369Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:01:00.370Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:00.370Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:01:00.433Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:01:00.514Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:01:00.517Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:00.517Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:01:00.518Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:01:46.470Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:01:46.471Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:46.471Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:01:46.515Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:01:46.571Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:01:46.572Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:06:37.522Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:06:37.523Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.name){\n    sendStatus(response,400,'name not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  //can create my planet since all test pass\n  let planet = new Note(request.body.name,request.body.content);\n  planet.push(planet);\n  sendJSON(response,200,planet);\n}","timestamp":"2017-12-07T00:06:37.523Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:09:06.987Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:09:06.988Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:09:06.988Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:09:07.029Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:09:07.076Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:09:07.077Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:09:07.077Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:09:07.078Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:10:29.319Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:10:29.321Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:10:29.322Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:10:29.399Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:10:29.484Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:10:29.486Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1yclqxwsic.f[2]++;cov_1yclqxwsic.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_1yclqxwsic.b[0][0]++;cov_1yclqxwsic.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1yclqxwsic.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[0][1]++;}cov_1yclqxwsic.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_1yclqxwsic.b[1][0]++;cov_1yclqxwsic.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_1yclqxwsic.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[1][1]++;}cov_1yclqxwsic.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_1yclqxwsic.b[2][0]++;cov_1yclqxwsic.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_1yclqxwsic.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1yclqxwsic.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_1yclqxwsic.s[25]++, new Note(request.body.name, request.body.content)); /* istanbul ignore next */cov_1yclqxwsic.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_1yclqxwsic.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:10:29.486Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:10:29.487Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:12:20.525Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:12:20.566Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:12:20.623Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"Responding with a 400 code due to name not found","timestamp":"2017-12-07T00:12:20.625Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:16:18.521Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:16:18.523Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:16:18.523Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:16:18.575Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:16:18.650Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:16:18.652Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planet.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:16:18.652Z"}
{"level":"info","message":"__REQUEST_ERROR","timestamp":"2017-12-07T00:16:18.653Z"}
{"message":"planet.push is not a function","stack":"TypeError: planet.push is not a function\n    at Object.<anonymous>.router.post (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/route/planet-router.js:45:10)\n    at requestParser.parse.then.request (/home/seth/codefellows/401/lab/08-09-vanilla-rest-server/lab-seth/lib/router.js:54:89)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)","level":"info","timestamp":"2017-12-07T00:16:18.653Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:18:12.297Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:18:12.298Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:18:12.298Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:18:12.362Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:18:12.440Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:18:12.442Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:18:12.442Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T00:18:12.444Z"}
{"id":"1c8c12b0-dae4-11e7-93e8-f557062ed815","discoverDate":"2017-05-12T12:19:19.359Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T00:18:12.444Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T00:21:26.947Z"}
{"level":"info","message":"/api/planet","timestamp":"2017-12-07T00:21:26.948Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:21:26.948Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T00:21:26.995Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T00:21:27.051Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T00:21:27.053Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_dsu7d9qvm.f[2]++;cov_dsu7d9qvm.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_dsu7d9qvm.b[0][0]++;cov_dsu7d9qvm.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[0][1]++;}cov_dsu7d9qvm.s[19]++;\n  if (!request.body.name) {/* istanbul ignore next */cov_dsu7d9qvm.b[1][0]++;cov_dsu7d9qvm.s[20]++;\n    sendStatus(response, 400, 'name not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[1][1]++;}cov_dsu7d9qvm.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_dsu7d9qvm.b[2][0]++;cov_dsu7d9qvm.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_dsu7d9qvm.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_dsu7d9qvm.b[2][1]++;}\n  //can create my planet since all test pass\n  let planet = /* istanbul ignore next */(cov_dsu7d9qvm.s[25]++, new Planet(request.body.name, request.body.content)); /* istanbul ignore next */cov_dsu7d9qvm.s[26]++;\n  planets.push(planet); /* istanbul ignore next */cov_dsu7d9qvm.s[27]++;\n  sendJSON(response, 200, planet);\n}","timestamp":"2017-12-07T00:21:27.053Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T00:21:27.054Z"}
{"id":"908b33d0-dae4-11e7-9590-5b5a2c9ab532","discoverDate":"2017-06-17T08:59:49.857Z","name":"BD032562b","content":"11h50m1555sDeclination02d45m365s","level":"info","message":"","timestamp":"2017-12-07T00:21:27.054Z"}
